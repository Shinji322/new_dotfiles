***REMOVED*** vim:fileencoding=utf-8:ft=conf:foldmethod=marker

***REMOVED***: Fonts {{{

***REMOVED***: kitty has very powerful font management. You can configure
***REMOVED***: individual font faces and even specify special fonts for particular
***REMOVED***: characters.

***REMOVED***font_family       SauceCodePro Nerd Font
font_family        FiraCode
bold_font          auto
***REMOVED***italic_font        auto
***REMOVED***bold_italic_font   auto
italic_font       NotoSerif Nerd Font
bold_italic_font  NotoSerif Nerd Font

font_size 12.0

***REMOVED***: Font size (in pts)

adjust_line_height  0
adjust_column_width 0

***REMOVED***: Change the size of each character cell kitty renders. You can use
***REMOVED***: either numbers, which are interpreted as pixels or percentages
***REMOVED***: (number followed by %), which are interpreted as percentages of the
***REMOVED***: unmodified values. You can use negative pixels or percentages less
***REMOVED***: than 100% to reduce sizes (but this might cause rendering
***REMOVED***: artifacts).

***REMOVED*** symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols

***REMOVED***: Map the specified unicode codepoints to a particular font. Useful
***REMOVED***: if you need special rendering for some symbols, such as for
***REMOVED***: Powerline. Avoids the need for patched fonts. Each unicode code
***REMOVED***: point is specified in the form U+<code point in hexadecimal>. You
***REMOVED***: can specify multiple code points, separated by commas and ranges
***REMOVED***: separated by hyphens. symbol_map itself can be specified multiple
***REMOVED***: times. Syntax is::

***REMOVED***:     symbol_map codepoints Font Family Name

disable_ligatures never

***REMOVED***: Choose how you want to handle multi-character ligatures. The
***REMOVED***: default is to always render them.  You can tell kitty to not render
***REMOVED***: them when the cursor is over them by using cursor to make editing
***REMOVED***: easier, or have kitty never render them at all by using always, if
***REMOVED***: you don't like them. The ligature strategy can be set per-window
***REMOVED***: either using the kitty remote control facility or by defining
***REMOVED***: shortcuts for it in kitty.conf, for example::

***REMOVED***:     map alt+1 disable_ligatures_in active always
***REMOVED***:     map alt+2 disable_ligatures_in all never
***REMOVED***:     map alt+3 disable_ligatures_in tab cursor

box_drawing_scale 0.001, 1, 1.5, 2

***REMOVED***: Change the sizes of the lines used for the box drawing unicode
***REMOVED***: characters These values are in pts. They will be scaled by the
***REMOVED***: monitor DPI to arrive at a pixel value. There must be four values
***REMOVED***: corresponding to thin, normal, thick, and very thick lines.

***REMOVED***: }}}

***REMOVED***: Cursor customization {{{

cursor ***REMOVED***cccccc

***REMOVED***: Default cursor color

cursor_text_color ***REMOVED***111111

***REMOVED***: Choose the color of text under the cursor. If you want it rendered
***REMOVED***: with the background color of the cell underneath instead, use the
***REMOVED***: special keyword: background

cursor_shape block

***REMOVED***: The cursor shape can be one of (block, beam, underline)

cursor_blink_interval -1
***REMOVED***cursor_blink_interval 0

***REMOVED***: The interval (in seconds) at which to blink the cursor. Set to zero
***REMOVED***: to disable blinking. Negative values mean use system default. Note
***REMOVED***: that numbers smaller than repaint_delay will be limited to
***REMOVED***: repaint_delay.

cursor_stop_blinking_after 15.0

***REMOVED***: Stop blinking cursor after the specified number of seconds of
***REMOVED***: keyboard inactivity.  Set to zero to never stop blinking.

***REMOVED***: }}}

***REMOVED***: Scrollback {{{

scrollback_lines 2000

***REMOVED***: Number of lines of history to keep in memory for scrolling back.
***REMOVED***: Memory is allocated on demand. Negative numbers are (effectively)
***REMOVED***: infinite scrollback. Note that using very large scrollback is not
***REMOVED***: recommended as it can slow down resizing of the terminal and also
***REMOVED***: use large amounts of RAM.

scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

***REMOVED***: Program with which to view scrollback in a new window. The
***REMOVED***: scrollback buffer is passed as STDIN to this program. If you change
***REMOVED***: it, make sure the program you use can handle ANSI escape sequences
***REMOVED***: for colors and text formatting. INPUT_LINE_NUMBER in the command
***REMOVED***: line above will be replaced by an integer representing which line
***REMOVED***: should be at the top of the screen.

scrollback_pager_history_size 0

***REMOVED***: Separate scrollback history size, used only for browsing the
***REMOVED***: scrollback buffer (in MB). This separate buffer is not available
***REMOVED***: for interactive scrolling but will be piped to the pager program
***REMOVED***: when viewing scrollback buffer in a separate window. The current
***REMOVED***: implementation stores one character in 4 bytes, so approximatively
***REMOVED***: 2500 lines per megabyte at 100 chars per line. A value of zero or
***REMOVED***: less disables this feature. The maximum allowed size is 4GB.

wheel_scroll_multiplier 5.0

***REMOVED***: Modify the amount scrolled by the mouse wheel. Note this is only
***REMOVED***: used for low precision scrolling devices, not for high precision
***REMOVED***: scrolling on platforms such as macOS and Wayland. Use negative
***REMOVED***: numbers to change scroll direction.

touch_scroll_multiplier 1.0

***REMOVED***: Modify the amount scrolled by a touchpad. Note this is only used
***REMOVED***: for high precision scrolling devices on platforms such as macOS and
***REMOVED***: Wayland. Use negative numbers to change scroll direction.

***REMOVED***: }}}

***REMOVED***: Mouse {{{

mouse_hide_wait 3.0

***REMOVED***: Hide mouse cursor after the specified number of seconds of the
***REMOVED***: mouse not being used. Set to zero to disable mouse cursor hiding.
***REMOVED***: Set to a negative value to hide the mouse cursor immediately when
***REMOVED***: typing text. Disabled by default on macOS as getting it to work
***REMOVED***: robustly with the ever-changing sea of bugs that is Cocoa is too
***REMOVED***: much effort.

url_color ***REMOVED***0087bd
url_style curly

***REMOVED***: The color and style for highlighting URLs on mouse-over. url_style
***REMOVED***: can be one of: none, single, double, curly

open_url_modifiers kitty_mod

***REMOVED***: The modifier keys to press when clicking with the mouse on URLs to
***REMOVED***: open the URL

open_url_with default

***REMOVED***: The program with which to open URLs that are clicked on. The
***REMOVED***: special value default means to use the operating system's default
***REMOVED***: URL handler.

copy_on_select no

***REMOVED***: Copy to clipboard or a private buffer on select. With this set to
***REMOVED***: clipboard, simply selecting text with the mouse will cause the text
***REMOVED***: to be copied to clipboard. Useful on platforms such as macOS that
***REMOVED***: do not have the concept of primary selections. You can instead
***REMOVED***: specify a name such as a1 to copy to a private kitty buffer
***REMOVED***: instead. Map a shortcut with the paste_from_buffer action to paste
***REMOVED***: from this private buffer. For example::

***REMOVED***:     map cmd+shift+v paste_from_buffer a1

***REMOVED***: Note that copying to the clipboard is a security risk, as all
***REMOVED***: programs, including websites open in your browser can read the
***REMOVED***: contents of the system clipboard.

strip_trailing_spaces never

***REMOVED***: Remove spaces at the end of lines when copying to clipboard. A
***REMOVED***: value of smart will do it when using normal selections, but not
***REMOVED***: rectangle selections. always will always do it.

rectangle_select_modifiers ctrl+alt

***REMOVED***: The modifiers to use rectangular selection (i.e. to select text in
***REMOVED***: a rectangular block with the mouse)

terminal_select_modifiers shift

***REMOVED***: The modifiers to override mouse selection even when a terminal
***REMOVED***: application has grabbed the mouse

select_by_word_characters :@-./_~?&=%+***REMOVED***

***REMOVED***: Characters considered part of a word when double clicking. In
***REMOVED***: addition to these characters any character that is marked as an
***REMOVED***: alphanumeric character in the unicode database will be matched.

click_interval -1.0

***REMOVED***: The interval between successive clicks to detect double/triple
***REMOVED***: clicks (in seconds). Negative numbers will use the system default
***REMOVED***: instead, if available, or fallback to 0.5.

focus_follows_mouse no

***REMOVED***: Set the active window to the window under the mouse when moving the
***REMOVED***: mouse around

pointer_shape_when_grabbed arrow

***REMOVED***: The shape of the mouse pointer when the program running in the
***REMOVED***: terminal grabs the mouse.

***REMOVED***: }}}

***REMOVED***: Performance tuning {{{

repaint_delay 10

***REMOVED***: Delay (in milliseconds) between screen updates. Decreasing it,
***REMOVED***: increases frames-per-second (FPS) at the cost of more CPU usage.
***REMOVED***: The default value yields ~100 FPS which is more than sufficient for
***REMOVED***: most uses. Note that to actually achieve 100 FPS you have to either
***REMOVED***: set sync_to_monitor to no or use a monitor with a high refresh
***REMOVED***: rate. Also, to minimize latency when there is pending input to be
***REMOVED***: processed, repaint_delay is ignored.

input_delay 3

***REMOVED***: Delay (in milliseconds) before input from the program running in
***REMOVED***: the terminal is processed. Note that decreasing it will increase
***REMOVED***: responsiveness, but also increase CPU usage and might cause flicker
***REMOVED***: in full screen programs that redraw the entire screen on each loop,
***REMOVED***: because kitty is so fast that partial screen updates will be drawn.

sync_to_monitor yes

***REMOVED***: Sync screen updates to the refresh rate of the monitor. This
***REMOVED***: prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
***REMOVED***: when scrolling. However, it limits the rendering speed to the
***REMOVED***: refresh rate of your monitor. With a very high speed mouse/high
***REMOVED***: keyboard repeat rate, you may notice some slight input latency. If
***REMOVED***: so, set this to no.

***REMOVED***: }}}

***REMOVED***: Terminal bell {{{

enable_audio_bell no

***REMOVED***: Enable/disable the audio bell. Useful in environments that require
***REMOVED***: silence.

visual_bell_duration 0.0

***REMOVED***: Visual bell duration. Flash the screen when a bell occurs for the
***REMOVED***: specified number of seconds. Set to zero to disable.

window_alert_on_bell yes

***REMOVED***: Request window attention on bell. Makes the dock icon bounce on
***REMOVED***: macOS or the taskbar flash on linux.

bell_on_tab yes

***REMOVED***: Show a bell symbol on the tab if a bell occurs in one of the
***REMOVED***: windows in the tab and the window is not the currently focused
***REMOVED***: window

command_on_bell none

***REMOVED***: Program to run when a bell occurs.

***REMOVED***: }}}

***REMOVED***: Window layout {{{

remember_window_size  yes
initial_window_width  640
initial_window_height 400

***REMOVED***: If enabled, the window size will be remembered so that new
***REMOVED***: instances of kitty will have the same size as the previous
***REMOVED***: instance. If disabled, the window will initially have size
***REMOVED***: configured by initial_window_width/height, in pixels. You can use a
***REMOVED***: suffix of "c" on the width/height values to have them interpreted
***REMOVED***: as number of cells instead of pixels.

enabled_layouts *

***REMOVED***: The enabled window layouts. A comma separated list of layout names.
***REMOVED***: The special value all means all layouts. The first listed layout
***REMOVED***: will be used as the startup layout. For a list of available
***REMOVED***: layouts, see the
***REMOVED***: https://sw.kovidgoyal.net/kitty/index.html***REMOVED***layouts.

window_resize_step_cells 2
window_resize_step_lines 2

***REMOVED***: The step size (in units of cell width/cell height) to use when
***REMOVED***: resizing windows. The cells value is used for horizontal resizing
***REMOVED***: and the lines value for vertical resizing.

window_border_width 1.0

***REMOVED***: The width (in pts) of window borders. Will be rounded to the
***REMOVED***: nearest number of pixels based on screen resolution. Note that
***REMOVED***: borders are displayed only when more than one window is visible.
***REMOVED***: They are meant to separate multiple windows.

draw_minimal_borders yes

***REMOVED***: Draw only the minimum borders needed. This means that only the
***REMOVED***: minimum needed borders for inactive windows are drawn. That is only
***REMOVED***: the borders that separate the inactive window from a neighbor. Note
***REMOVED***: that setting a non-zero window margin overrides this and causes all
***REMOVED***: borders to be drawn.

window_margin_width 0.0

***REMOVED***: The window margin (in pts) (blank area outside the border)

single_window_margin_width -1000.0

***REMOVED***: The window margin (in pts) to use when only a single window is
***REMOVED***: visible. Negative values will cause the value of
***REMOVED***: window_margin_width to be used instead.

window_padding_width 0.0

***REMOVED***: The window padding (in pts) (blank area between the text and the
***REMOVED***: window border)

placement_strategy center

***REMOVED***: When the window size is not an exact multiple of the cell size, the
***REMOVED***: cell area of the terminal window will have some extra padding on
***REMOVED***: the sides. You can control how that padding is distributed with
***REMOVED***: this option. Using a value of center means the cell area will be
***REMOVED***: placed centrally. A value of top-left means the padding will be on
***REMOVED***: only the bottom and right edges.

active_border_color ***REMOVED***00ff00

***REMOVED***: The color for the border of the active window. Set this to none to
***REMOVED***: not draw borders around the active window.

inactive_border_color ***REMOVED***cccccc

***REMOVED***: The color for the border of inactive windows

bell_border_color ***REMOVED***ff5a00

***REMOVED***: The color for the border of inactive windows in which a bell has
***REMOVED***: occurred

inactive_text_alpha 1.0

***REMOVED***: Fade the text in inactive windows by the specified amount (a number
***REMOVED***: between zero and one, with zero being fully faded).

hide_window_decorations no

***REMOVED***: Hide the window decorations (title-bar and window borders). Whether
***REMOVED***: this works and exactly what effect it has depends on the window
***REMOVED***: manager/operating system.

resize_debounce_time 0.1

***REMOVED***: The time (in seconds) to wait before redrawing the screen when a
***REMOVED***: resize event is received. On platforms such as macOS, where the
***REMOVED***: operating system sends events corresponding to the start and end of
***REMOVED***: a resize, this number is ignored.

resize_draw_strategy static

***REMOVED***: Choose how kitty draws a window while a resize is in progress. A
***REMOVED***: value of static means draw the current window contents, mostly
***REMOVED***: unchanged. A value of scale means draw the current window contents
***REMOVED***: scaled. A value of blank means draw a blank window. A value of size
***REMOVED***: means show the window size in cells.

***REMOVED***: }}}

***REMOVED***: Tab bar {{{

tab_bar_edge bottom

***REMOVED***: Which edge to show the tab bar on, top or bottom

tab_bar_margin_width 0.0

***REMOVED***: The margin to the left and right of the tab bar (in pts)

tab_bar_style fade

***REMOVED***: The tab bar style, can be one of: fade, separator, powerline, or
***REMOVED***: hidden. In the fade style, each tab's edges fade into the
***REMOVED***: background color, in the separator style, tabs are separated by a
***REMOVED***: configurable separator, and the powerline shows the tabs as a
***REMOVED***: continuous line.

tab_bar_min_tabs 2

***REMOVED***: The minimum number of tabs that must exist before the tab bar is
***REMOVED***: shown

tab_switch_strategy previous

***REMOVED***: The algorithm to use when switching to a tab when the current tab
***REMOVED***: is closed. The default of previous will switch to the last used
***REMOVED***: tab. A value of left will switch to the tab to the left of the
***REMOVED***: closed tab. A value of last will switch to the right-most tab.

tab_fade 0.25 0.5 0.75 1

***REMOVED***: Control how each tab fades into the background when using fade for
***REMOVED***: the tab_bar_style. Each number is an alpha (between zero and one)
***REMOVED***: that controls how much the corresponding cell fades into the
***REMOVED***: background, with zero being no fade and one being full fade. You
***REMOVED***: can change the number of cells used by adding/removing entries to
***REMOVED***: this list.

tab_separator " ┇"

***REMOVED***: The separator between tabs in the tab bar when using separator as
***REMOVED***: the tab_bar_style.

tab_title_template {title}

***REMOVED***: A template to render the tab title. The default just renders the
***REMOVED***: title. If you wish to include the tab-index as well, use something
***REMOVED***: like: {index}: {title}. Useful if you have shortcuts mapped for
***REMOVED***: goto_tab N.

active_tab_foreground   ***REMOVED***000
active_tab_background   ***REMOVED***eee
active_tab_font_style   bold-italic
inactive_tab_foreground ***REMOVED***444
inactive_tab_background ***REMOVED***999
inactive_tab_font_style normal

***REMOVED***: Tab bar colors and styles

***REMOVED***: }}}

***REMOVED***: Color scheme {{{

background_opacity      0.9
include themes/Dracula.conf
***REMOVED***include ./kitty-themes/themes/MaterialDark.conf ***REMOVED*** monokai esque
***REMOVED***include ./kitty-themes/themes/Zenburn.conf   ***REMOVED*** similar colors

***REMOVED***cursor                  ***REMOVED***928374

***REMOVED***background              ***REMOVED***282828
***REMOVED***foreground              ***REMOVED***fbf1c7
***REMOVED***selection_foreground    ***REMOVED***928374
***REMOVED***selection_background    ***REMOVED***ebdbb2
***REMOVED***
***REMOVED******REMOVED*** black
***REMOVED***color0                  ***REMOVED***282828
***REMOVED***color8                  ***REMOVED***7c6f64
***REMOVED***
***REMOVED******REMOVED*** red
***REMOVED***color1                  ***REMOVED***cc241d
***REMOVED***color9                  ***REMOVED***fb4934
***REMOVED***
***REMOVED******REMOVED***: green
***REMOVED***color2                  ***REMOVED***98971a
***REMOVED***color10                 ***REMOVED***b8bb26
***REMOVED***
***REMOVED******REMOVED*** yellow
***REMOVED***color3                  ***REMOVED***d79921
***REMOVED***color11                 ***REMOVED***fabd2f
***REMOVED***
***REMOVED******REMOVED*** blue
***REMOVED***color4                  ***REMOVED***458588
***REMOVED***color12                 ***REMOVED***83a598
***REMOVED***
***REMOVED******REMOVED*** purple
***REMOVED***color5                  ***REMOVED***b16286
***REMOVED***color13                 ***REMOVED***d3869b
***REMOVED***
***REMOVED******REMOVED*** aqua
***REMOVED***color6                  ***REMOVED***689d6a
***REMOVED***color14                 ***REMOVED***8ec07c
***REMOVED***
***REMOVED******REMOVED*** white
***REMOVED***color7                  ***REMOVED***a89984
***REMOVED***color15                 ***REMOVED***fbf1c7

***REMOVED*** Selection highlight
selection_foreground none
selection_background ***REMOVED***28344a

***REMOVED*** The color for highlighting URLs on mouse-over
url_color ***REMOVED***9ece6a

***REMOVED*** Window borders
active_border_color ***REMOVED***3d59a1
inactive_border_color ***REMOVED***101014
bell_border_color ***REMOVED***e0af68

***REMOVED*** Tab bar
tab_bar_style fade
tab_fade 1
active_tab_foreground   ***REMOVED***3d59a1
active_tab_background   ***REMOVED***16161e
active_tab_font_style   bold
inactive_tab_foreground ***REMOVED***787c99
inactive_tab_background ***REMOVED***16161e
inactive_tab_font_style bold
tab_bar_background ***REMOVED***101014

***REMOVED*** Title bar
macos_titlebar_color ***REMOVED***16161e

***REMOVED***: Advanced {{{

shell .

***REMOVED***: The shell program to execute. The default value of . means to use
***REMOVED***: whatever shell is set as the default shell for the current user.
***REMOVED***: Note that on macOS if you change this, you might need to add
***REMOVED***: --login to ensure that the shell starts in interactive mode and
***REMOVED***: reads its startup rc files.

editor .

***REMOVED***: The console editor to use when editing the kitty config file or
***REMOVED***: similar tasks. A value of . means to use the environment variables
***REMOVED***: VISUAL and EDITOR in that order. Note that this environment
***REMOVED***: variable has to be set not just in your shell startup scripts but
***REMOVED***: system-wide, otherwise kitty will not see it.

close_on_child_death no

***REMOVED***: Close the window when the child process (shell) exits. If no (the
***REMOVED***: default), the terminal will remain open when the child exits as
***REMOVED***: long as there are still processes outputting to the terminal (for
***REMOVED***: example disowned or backgrounded processes). If yes, the window
***REMOVED***: will close as soon as the child process exits. Note that setting it
***REMOVED***: to yes means that any background processes still using the terminal
***REMOVED***: can fail silently because their stdout/stderr/stdin no longer work.

allow_remote_control no

***REMOVED***: Allow other programs to control kitty. If you turn this on other
***REMOVED***: programs can control all aspects of kitty, including sending text
***REMOVED***: to kitty windows, opening new windows, closing windows, reading the
***REMOVED***: content of windows, etc.  Note that this even works over ssh
***REMOVED***: connections. You can chose to either allow any program running
***REMOVED***: within kitty to control it, with yes or only programs that connect
***REMOVED***: to the socket specified with the kitty --listen-on command line
***REMOVED***: option, if you use the value socket-only. The latter is useful if
***REMOVED***: you want to prevent programs running on a remote computer over ssh
***REMOVED***: from controlling kitty.

***REMOVED*** env 

***REMOVED***: Specify environment variables to set in all child processes. Note
***REMOVED***: that environment variables are expanded recursively, so if you
***REMOVED***: use::

***REMOVED***:     env MYVAR1=a
***REMOVED***:     env MYVAR2=${MYVAR1}/${HOME}/b

***REMOVED***: The value of MYVAR2 will be a/<path to home directory>/b.

update_check_interval 24

***REMOVED***: Periodically check if an update to kitty is available. If an update
***REMOVED***: is found a system notification is displayed informing you of the
***REMOVED***: available update. The default is to check every 24 hrs, set to zero
***REMOVED***: to disable.

startup_session none

***REMOVED***: Path to a session file to use for all kitty instances. Can be
***REMOVED***: overridden by using the kitty --session command line option for
***REMOVED***: individual instances. See
***REMOVED***: https://sw.kovidgoyal.net/kitty/index.html***REMOVED***sessions in the kitty
***REMOVED***: documentation for details. Note that relative paths are interpreted
***REMOVED***: with respect to the kitty config directory. Environment variables
***REMOVED***: in the path are expanded.

clipboard_control write-clipboard write-primary

***REMOVED***: Allow programs running in kitty to read and write from the
***REMOVED***: clipboard. You can control exactly which actions are allowed. The
***REMOVED***: set of possible actions is: write-clipboard read-clipboard write-
***REMOVED***: primary read-primary. You can additionally specify no-append to
***REMOVED***: disable kitty's protocol extension for clipboard concatenation. The
***REMOVED***: default is to allow writing to the clipboard and primary selection
***REMOVED***: with concatenation enabled. Note that enabling the read
***REMOVED***: functionality is a security risk as it means that any program, even
***REMOVED***: one running on a remote server via SSH can read your clipboard.

term xterm-kitty

***REMOVED***: The value of the TERM environment variable to set. Changing this
***REMOVED***: can break many terminal programs, only change it if you know what
***REMOVED***: you are doing, not because you read some advice on Stack Overflow
***REMOVED***: to change it. The TERM variable is used by various programs to get
***REMOVED***: information about the capabilities and behavior of the terminal. If
***REMOVED***: you change it, depending on what programs you run, and how
***REMOVED***: different the terminal you are changing it to is, various things
***REMOVED***: from key-presses, to colors, to various advanced features may not
***REMOVED***: work.

***REMOVED***: }}}

***REMOVED***: OS specific tweaks {{{

macos_titlebar_color system

***REMOVED***: Change the color of the kitty window's titlebar on macOS. A value
***REMOVED***: of system means to use the default system color, a value of
***REMOVED***: background means to use the background color of the currently
***REMOVED***: active window and finally you can use an arbitrary color, such as
***REMOVED***: ***REMOVED***12af59 or red. WARNING: This option works by using a hack, as
***REMOVED***: there is no proper Cocoa API for it. It sets the background color
***REMOVED***: of the entire window and makes the titlebar transparent. As such it
***REMOVED***: is incompatible with background_opacity. If you want to use both,
***REMOVED***: you are probably better off just hiding the titlebar with
***REMOVED***: hide_window_decorations.

macos_option_as_alt no

***REMOVED***: Use the option key as an alt key. With this set to no, kitty will
***REMOVED***: use the macOS native Option+Key = unicode character behavior. This
***REMOVED***: will break any Alt+key keyboard shortcuts in your terminal
***REMOVED***: programs, but you can use the macOS unicode input technique. You
***REMOVED***: can use the values: left, right, or both to use only the left,
***REMOVED***: right or both Option keys as Alt, instead.

macos_hide_from_tasks no

***REMOVED***: Hide the kitty window from running tasks (Option+Tab) on macOS.

macos_quit_when_last_window_closed no

***REMOVED***: Have kitty quit when all the top-level windows are closed. By
***REMOVED***: default, kitty will stay running, even with no open windows, as is
***REMOVED***: the expected behavior on macOS.

macos_window_resizable yes

***REMOVED***: Disable this if you want kitty top-level (OS) windows to not be
***REMOVED***: resizable on macOS.

macos_thicken_font 0

***REMOVED***: Draw an extra border around the font with the given width, to
***REMOVED***: increase legibility at small font sizes. For example, a value of
***REMOVED***: 0.75 will result in rendering that looks similar to sub-pixel
***REMOVED***: antialiasing at common font sizes.

macos_traditional_fullscreen no

***REMOVED***: Use the traditional full-screen transition, that is faster, but
***REMOVED***: less pretty.

macos_show_window_title_in all

***REMOVED***: Show or hide the window title in the macOS window or menu-bar. A
***REMOVED***: value of window will show the title of the currently active window
***REMOVED***: at the top of the macOS window. A value of menubar will show the
***REMOVED***: title of the currently active window in the macOS menu-bar, making
***REMOVED***: use of otherwise wasted space. all will show the title everywhere
***REMOVED***: and none hides the title in the window and the menu-bar.

macos_custom_beam_cursor no

***REMOVED***: Enable/disable custom mouse cursor for macOS that is easier to see
***REMOVED***: on both light and dark backgrounds. WARNING: this might make your
***REMOVED***: mouse cursor invisible on dual GPU machines.

linux_display_server auto

***REMOVED***: Choose between Wayland and X11 backends. By default, an appropriate
***REMOVED***: backend based on the system state is chosen automatically. Set it
***REMOVED***: to x11 or wayland to force the choice.

***REMOVED***: }}}

***REMOVED***: Keyboard shortcuts {{{

***REMOVED***: For a list of key names, see: GLFW keys
***REMOVED***: <https://www.glfw.org/docs/latest/group__keys.html>. The name to
***REMOVED***: use is the part after the GLFW_KEY_ prefix. For a list of modifier
***REMOVED***: names, see: GLFW mods
***REMOVED***: <https://www.glfw.org/docs/latest/group__mods.html>

***REMOVED***: On Linux you can also use XKB key names to bind keys that are not
***REMOVED***: supported by GLFW. See XKB keys
***REMOVED***: <https://github.com/xkbcommon/libxkbcommon/blob/master/xkbcommon/xkbcommon-
***REMOVED***: keysyms.h> for a list of key names. The name to use is the part
***REMOVED***: after the XKB_KEY_ prefix. Note that you should only use an XKB key
***REMOVED***: name for keys that are not present in the list of GLFW keys.

***REMOVED***: Finally, you can use raw system key codes to map keys. To see the
***REMOVED***: system key code for a key, start kitty with the kitty --debug-
***REMOVED***: keyboard option. Then kitty will output some debug text for every
***REMOVED***: key event. In that text look for ``native_code`` the value of that
***REMOVED***: becomes the key name in the shortcut. For example:

***REMOVED***: .. code-block:: none

***REMOVED***:     on_key_input: glfw key: 65 native_code: 0x61 action: PRESS mods: 0x0 text: 'a'

***REMOVED***: Here, the key name for the A key is 0x61 and you can use it with::

***REMOVED***:     map ctrl+0x61 something

***REMOVED***: to map ctrl+a to something.

***REMOVED***: You can use the special action no_op to unmap a keyboard shortcut
***REMOVED***: that is assigned in the default configuration::

***REMOVED***:     map kitty_mod+space no_op

***REMOVED***: You can combine multiple actions to be triggered by a single
***REMOVED***: shortcut, using the syntax below::

***REMOVED***:     map key combine <separator> action1 <separator> action2 <separator> action3 ...

***REMOVED***: For example::

***REMOVED***:     map kitty_mod+e combine : new_window : next_layout

***REMOVED***: this will create a new window and switch to the next available
***REMOVED***: layout

***REMOVED***: You can use multi-key shortcuts using the syntax shown below::

***REMOVED***:     map key1>key2>key3 action

***REMOVED***: For example::

***REMOVED***:     map ctrl+f>2 set_font_size 20

kitty_mod ctrl+shift

***REMOVED***: The value of kitty_mod is used as the modifier for all default
***REMOVED***: shortcuts, you can change it in your kitty.conf to change the
***REMOVED***: modifiers for all the default shortcuts.

clear_all_shortcuts no

***REMOVED***: You can have kitty remove all shortcut definition seen up to this
***REMOVED***: point. Useful, for instance, to remove the default shortcuts.

***REMOVED*** kitten_alias hints hints --hints-offset=0

***REMOVED***: You can create aliases for kitten names, this allows overriding the
***REMOVED***: defaults for kitten options and can also be used to shorten
***REMOVED***: repeated mappings of the same kitten with a specific group of
***REMOVED***: options. For example, the above alias changes the default value of
***REMOVED***: kitty +kitten hints --hints-offset to zero for all mappings,
***REMOVED***: including the builtin ones.

***REMOVED***: Clipboard {{{

map kitty_mod+c copy_to_clipboard

***REMOVED***: There is also a copy_or_interrupt action that can be optionally
***REMOVED***: mapped to Ctrl+c. It will copy only if there is a selection and
***REMOVED***: send an interrupt otherwise.

map kitty_mod+v  paste_from_clipboard
map kitty_mod+s  paste_from_selection
map shift+insert paste_from_selection
map kitty_mod+o  pass_selection_to_program

***REMOVED***: You can also pass the contents of the current selection to any
***REMOVED***: program using pass_selection_to_program. By default, the system's
***REMOVED***: open program is used, but you can specify your own, the selection
***REMOVED***: will be passed as a command line argument to the program, for
***REMOVED***: example::

***REMOVED***:     map kitty_mod+o pass_selection_to_program firefox

***REMOVED***: You can pass the current selection to a terminal program running in
***REMOVED***: a new kitty window, by using the @selection placeholder::

***REMOVED***:     map kitty_mod+y new_window less @selection

***REMOVED***: }}}

***REMOVED***: Scrolling {{{

map kitty_mod+up        scroll_line_up
map kitty_mod+k         scroll_line_up
map kitty_mod+down      scroll_line_down
map kitty_mod+j         scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end
map kitty_mod+h         show_scrollback

***REMOVED***: You can pipe the contents of the current screen + history buffer as
***REMOVED***: STDIN to an arbitrary program using the ``launch`` function. For
***REMOVED***: example, the following opens the scrollback buffer in less in an
***REMOVED***: overlay window::

***REMOVED***:     map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay less +G -R

***REMOVED***: For more details on piping screen and buffer contents to external
***REMOVED***: programs, see launch.

***REMOVED***: }}}

***REMOVED***: Window management {{{

map kitty_mod+enter new_window

***REMOVED***: You can open a new window running an arbitrary program, for
***REMOVED***: example::

***REMOVED***:     map kitty_mod+y      launch mutt

***REMOVED***: You can open a new window with the current working directory set to
***REMOVED***: the working directory of the current window using::

***REMOVED***:     map ctrl+alt+enter    launch --cwd=current

***REMOVED***: You can open a new window that is allowed to control kitty via the
***REMOVED***: kitty remote control facility by prefixing the command line with @.
***REMOVED***: Any programs running in that window will be allowed to control
***REMOVED***: kitty. For example::

***REMOVED***:     map ctrl+enter launch --allow-remote-control some_program

***REMOVED***: You can open a new window next to the currently active window or as
***REMOVED***: the first window, with::

***REMOVED***:     map ctrl+n launch --location=neighbor some_program
***REMOVED***:     map ctrl+f launch --location=first some_program

***REMOVED***: For more details, see launch.

map kitty_mod+n new_os_window

***REMOVED***: Works like new_window above, except that it opens a top level OS
***REMOVED***: kitty window. In particular you can use new_os_window_with_cwd to
***REMOVED***: open a window with the current working directory.

map kitty_mod+w close_window
map kitty_mod+] next_window
map kitty_mod+[ previous_window
map kitty_mod+f move_window_forward
map kitty_mod+b move_window_backward
map kitty_mod+` move_window_to_top
map kitty_mod+r start_resizing_window
map kitty_mod+1 first_window
map kitty_mod+2 second_window
map kitty_mod+3 third_window
map kitty_mod+4 fourth_window
map kitty_mod+5 fifth_window
map kitty_mod+6 sixth_window
map kitty_mod+7 seventh_window
map kitty_mod+8 eighth_window
map kitty_mod+9 ninth_window
map kitty_mod+0 tenth_window
***REMOVED***: }}}

***REMOVED***: Tab management {{{

map kitty_mod+right next_tab
map kitty_mod+left  previous_tab
map kitty_mod+t     new_tab
map kitty_mod+q     close_tab
map kitty_mod+.     move_tab_forward
map kitty_mod+,     move_tab_backward
map kitty_mod+alt+t set_tab_title

***REMOVED***: You can also create shortcuts to go to specific tabs, with 1 being
***REMOVED***: the first tab, 2 the second tab and -1 being the previously active
***REMOVED***: tab::

***REMOVED***:     map ctrl+alt+1 goto_tab 1
***REMOVED***:     map ctrl+alt+2 goto_tab 2

***REMOVED***: Just as with new_window above, you can also pass the name of
***REMOVED***: arbitrary commands to run when using new_tab and use
***REMOVED***: new_tab_with_cwd. Finally, if you want the new tab to open next to
***REMOVED***: the current tab rather than at the end of the tabs list, use::

***REMOVED***:     map ctrl+t new_tab !neighbor [optional cmd to run]
***REMOVED***: }}}

***REMOVED***: Layout management {{{

map kitty_mod+l next_layout

***REMOVED***: You can also create shortcuts to switch to specific layouts::

***REMOVED***:     map ctrl+alt+t goto_layout tall
***REMOVED***:     map ctrl+alt+s goto_layout stack

***REMOVED***: Similarly, to switch back to the previous layout::

***REMOVED***:    map ctrl+alt+p last_used_layout
***REMOVED***: }}}

***REMOVED***: Font sizes {{{

***REMOVED***: You can change the font size for all top-level kitty OS windows at
***REMOVED***: a time or only the current one.

map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0

***REMOVED***: To setup shortcuts for specific font sizes::

***REMOVED***:     map kitty_mod+f6 change_font_size all 10.0

***REMOVED***: To setup shortcuts to change only the current OS window's font
***REMOVED***: size::

***REMOVED***:     map kitty_mod+f6 change_font_size current 10.0
***REMOVED***: }}}

***REMOVED***: Select and act on visible text {{{

***REMOVED***: Use the hints kitten to select text and either pass it to an
***REMOVED***: external program or insert it into the terminal or copy it to the
***REMOVED***: clipboard.

map kitty_mod+e kitten hints

***REMOVED***: Open a currently visible URL using the keyboard. The program used
***REMOVED***: to open the URL is specified in open_url_with.

map kitty_mod+p>f kitten hints --type path --program -

***REMOVED***: Select a path/filename and insert it into the terminal. Useful, for
***REMOVED***: instance to run git commands on a filename output from a previous
***REMOVED***: git command.

map kitty_mod+p>shift+f kitten hints --type path

***REMOVED***: Select a path/filename and open it with the default open program.

map kitty_mod+p>l kitten hints --type line --program -

***REMOVED***: Select a line of text and insert it into the terminal. Use for the
***REMOVED***: output of things like: ls -1

map kitty_mod+p>w kitten hints --type word --program -

***REMOVED***: Select words and insert into terminal.

map kitty_mod+p>h kitten hints --type hash --program -

***REMOVED***: Select something that looks like a hash and insert it into the
***REMOVED***: terminal. Useful with git, which uses sha1 hashes to identify
***REMOVED***: commits


***REMOVED***: The hints kitten has many more modes of operation that you can map
***REMOVED***: to different shortcuts. For a full description see kittens/hints.
***REMOVED***: }}}

***REMOVED***: Miscellaneous {{{

map kitty_mod+f11    toggle_fullscreen
map kitty_mod+f10    toggle_maximized
map kitty_mod+u      kitten unicode_input
map kitty_mod+f2     edit_config_file
map kitty_mod+escape kitty_shell window

***REMOVED***: Open the kitty shell in a new window/tab/overlay/os_window to
***REMOVED***: control kitty using commands.

map kitty_mod+a>m    set_background_opacity +0.1
map kitty_mod+a>l    set_background_opacity -0.1
map kitty_mod+a>1    set_background_opacity 1
map kitty_mod+a>d    set_background_opacity default
map kitty_mod+delete clear_terminal reset active

***REMOVED***: You can create shortcuts to clear/reset the terminal. For example::

***REMOVED***:     ***REMOVED*** Reset the terminal
***REMOVED***:     map kitty_mod+f9 clear_terminal reset active
***REMOVED***:     ***REMOVED*** Clear the terminal screen by erasing all contents
***REMOVED***:     map kitty_mod+f10 clear_terminal clear active
***REMOVED***:     ***REMOVED*** Clear the terminal scrollback by erasing it
***REMOVED***:     map kitty_mod+f11 clear_terminal scrollback active
***REMOVED***:     ***REMOVED*** Scroll the contents of the screen into the scrollback
***REMOVED***:     map kitty_mod+f12 clear_terminal scroll active

***REMOVED***: If you want to operate on all windows instead of just the current
***REMOVED***: one, use all instead of active.

***REMOVED***: It is also possible to remap Ctrl+L to both scroll the current
***REMOVED***: screen contents into the scrollback buffer and clear the screen,
***REMOVED***: instead of just clearing the screen::

***REMOVED***:     map ctrl+l combine : clear_terminal scroll active : send_text normal,application \x0c


***REMOVED***: You can tell kitty to send arbitrary (UTF-8) encoded text to the
***REMOVED***: client program when pressing specified shortcut keys. For example::

***REMOVED***:     map ctrl+alt+a send_text all Special text

***REMOVED***: This will send "Special text" when you press the ctrl+alt+a key
***REMOVED***: combination.  The text to be sent is a python string literal so you
***REMOVED***: can use escapes like \x1b to send control codes or \u21fb to send
***REMOVED***: unicode characters (or you can just input the unicode characters
***REMOVED***: directly as UTF-8 text). The first argument to send_text is the
***REMOVED***: keyboard modes in which to activate the shortcut. The possible
***REMOVED***: values are normal or application or kitty or a comma separated
***REMOVED***: combination of them.  The special keyword all means all modes. The
***REMOVED***: modes normal and application refer to the DECCKM cursor key mode
***REMOVED***: for terminals, and kitty refers to the special kitty extended
***REMOVED***: keyboard protocol.

***REMOVED***: Another example, that outputs a word and then moves the cursor to
***REMOVED***: the start of the line (same as pressing the Home key)::

***REMOVED***:     map ctrl+alt+a send_text normal Word\x1b[H
***REMOVED***:     map ctrl+alt+a send_text application Word\x1bOH

***REMOVED***: }}}

***REMOVED*** }}}
